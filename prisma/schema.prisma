// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String          @id @default(auto()) @map("_id") @db.ObjectId
  nickName        String          @unique
  email           String          @unique
  password        String
  status          String?
  displayName     String?         @map("display_name")
  groupIds        String[]        @db.ObjectId
  groups          Group[]         @relation(fields: [groupIds], references: [id])
  messageChatIds  String[]        @db.ObjectId
  messageChats    MessageChat[]   @relation(fields: [messageChatIds], references: [id])
  createdAt       DateTime        @default(now()) @map("created_at")
  updatedAt       DateTime        @updatedAt @map("updated_at")
  @@map("users")
}

model Message {
  id              String              @id @default(auto()) @map("_id") @db.ObjectId
  content         String
  userId          String              @db.ObjectId
  groupId         String?             @db.ObjectId
  messageChatId   String              @db.ObjectId
  messageChat     MessageChat         @relation(fields: [messageChatId], references: [id])
  createdAt       DateTime            @default(now()) @map("created_at")
  updatedAt       DateTime            @updatedAt @map("updated_at")
}

model Group {
  id                    String              @id @default(auto()) @map("_id") @db.ObjectId
  userIDs               String[]            @db.ObjectId
  users                 User[]              @relation(fields: [userIDs], references: [id])
  createdAt             DateTime            @default(now()) @map("created_at")
  updatedAt             DateTime            @updatedAt @map("updated_at")
  messageChats          MessageChat[]
  @@map("groups")
}

model MessageChat {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  userIds     String[]    @db.ObjectId
  users       User[]      @relation(fields: [userIds], references: [id])
  groupId     String?      @db.ObjectId
  group       Group?       @relation(fields: [groupId], references: [id])
  messages    Message[]
  @@map("message_chat")
}
